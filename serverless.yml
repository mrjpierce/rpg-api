service: rpg-api
custom:
  blab:
    noVPC: true
  stage: '${opt:stage, self:provider.stage}'
  local:
    LLAMA_LE_TOKEN: '${env:LLAMA_LE_TOKEN}'
    LLAMA_LOG_LEVEL: '${env:LLAMA_LOG_LEVEL}'
  dev:
    LLAMA_LE_TOKEN: <NEED TO GET>
    LLAMA_LOG_LEVEL: warn
  test:
    LLAMA_LE_TOKEN: <NEED TO GET>
    LLAMA_LOG_LEVEL: warn
  production:
    LLAMA_LE_TOKEN: <NEED TO GET>
    LLAMA_LOG_LEVEL: error
provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  timeout: 15
  environment:
    LLAMA_LE_TOKEN: '${self:custom.${self:custom.stage}.LLAMA_LE_TOKEN}'
    LLAMA_LOG_LEVEL: '${self:custom.${self:custom.stage}.LLAMA_LOG_LEVEL}'
functions:
  get-game:
    handler: out/index.getGameLambda
    events:
      - http:
          path: /game/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
  put-move-unit:
    handler: out/index.putMoveunitLambda
    events:
      - http:
          path: /game/unit/move/{gameId}/{unitId}
          method: put
          request:
            parameters:
              paths:
                id: true
  post-create-unit:
    handler: out/index.postUnitLambda
    events:
      - http:
          path: /unit/player
          method: post
          cors: true
  post-create-board:
    handler: out/index.postBoardLambda
    events:
      - http:
          path: /board
          method: post
          cors: true
  post-create-game:
    handler: out/index.postNewGameLambda
    events:
      - http:
          path: /game
          method: post
          cors: true
plugins:
  - serverless-offline
  - '@ifit/blab'
  - '@ifit/janus'
